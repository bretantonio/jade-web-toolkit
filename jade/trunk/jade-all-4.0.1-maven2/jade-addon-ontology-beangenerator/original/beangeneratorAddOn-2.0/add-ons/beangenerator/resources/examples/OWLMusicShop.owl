<?xml version="1.0"?>
<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns="http://jade.cselt.it/messagecontentontology#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
  xml:base="http://jade.cselt.it/messagecontentontology">
  <owl:Ontology rdf:about="">
    <rdfs:seeAlso rdf:resource="http://gaper.swi.psy.uva.nl/beangenerator"/>
    <rdfs:isDefinedBy rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Chris van Aart, Acklin BV (chris @ acklin.nl)</rdfs:isDefinedBy>
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >1.0</owl:versionInfo>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >With the beangenerator you can generate java files representing an ontology that can be used within the JADE Toolkit (3.1). The beangenerator is implemented as a plug-in for Protégé (2.1). 
This version is to be used when generating beans from an OWL ontology.

- download and the file: beangenerator.jar into the plug-in directory of Protégé (this file contains the code of the plug-in).
-You should also let your CLASSPATH link to the beangenerator.jar file
-download and copy the file: beangenerator.properties into the root directory of Protégé (this file contains favorite settings for the plug-in).
 - download and copy the file: protegeprojects.zip into your project directory (this file contains the OWLSimpleJADEAbstractOntology project and the OWLMusicShopOntology project).
 -open a new or existing Protégé project
 -include the OWLSimpleJADEAbstractOntology into your project
 -create concepts by making subclasses of the class [Concept], e.g. CD, Items.
 -create agentactions by making subclasses of the class [AgentAction], e.g. Sell, Buy.
-create agents by making subclasses of the class [AID], e.g. Seller, Buyer
-create predicates by making subclasses of the class [Predicate], e.g. Owns, Contains
 -go to menu of Protégé: open project>configure... and select the OntologyBeanGeneratorTab checkbox
 -select the Ontology Bean Generator tab
 -specify (or select from the combobox) a package name, e.g. mypackage.onto
 -specify (or select from the combobox or from the [...] button) a location where the java files are to be created (make sure the directory exists) e.g. .../projects/mypackage/src/mypackage/onto
 -specify (or select from the combobox) a ontology name: e.g. Newspaper
 -press the generate button (old generated files will be overwritten)
 -import the the ontology files into your agent project
 -register the ontology in the agent
 -you (the agents) are ready to go!</rdfs:comment>
  </owl:Ontology>
  <owl:Class rdf:ID="AID">
    <rdfs:subClassOf>
      <owl:Class rdf:ID="Concept"/>
    </rdfs:subClassOf>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Agent IDentifier.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="Item">
    <rdfs:subClassOf>
      <owl:Class rdf:about="#Concept"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:ID="CD">
    <rdfs:subClassOf rdf:resource="#Item"/>
  </owl:Class>
  <owl:Class rdf:ID="Track">
    <rdfs:subClassOf>
      <owl:Class rdf:about="#Concept"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:ID="AgentAction">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The common ancestor for all actions in an ontology (e.g. Sell, Buy...).</rdfs:comment>
    <rdfs:subClassOf>
      <owl:Class rdf:about="#Concept"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="#Concept">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The common ancestor for all concepts (i.e. types of entity such as Person, Address...) in an</rdfs:comment>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The common ancestor for all concepts (i.e. types of entity such as Person, Address...) in an ontology.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="Predicate">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The common ancestor for all predicates in an ontology (e.g. FatherOf...).</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="Sell">
    <rdfs:subClassOf rdf:resource="#AgentAction"/>
  </owl:Class>
  <owl:ObjectProperty rdf:ID="buyer">
    <rdfs:range rdf:resource="#AID"/>
    <rdfs:domain rdf:resource="#Sell"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="tracks">
    <rdfs:range rdf:resource="#Track"/>
    <rdfs:domain rdf:resource="#CD"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="item">
    <rdfs:domain rdf:resource="#Sell"/>
    <rdfs:range rdf:resource="#Item"/>
  </owl:ObjectProperty>
  <owl:DatatypeProperty rdf:ID="title">
    <rdfs:domain rdf:resource="#CD"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
  </owl:DatatypeProperty>
  <owl:FunctionalProperty rdf:ID="duration">
    <rdfs:domain rdf:resource="#Track"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#int"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/>
  </owl:FunctionalProperty>
  <owl:FunctionalProperty rdf:ID="name">
    <rdfs:domain rdf:resource="#Track"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/>
  </owl:FunctionalProperty>
  <owl:FunctionalProperty rdf:ID="creditCardNumber">
    <rdfs:domain rdf:resource="#Sell"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </owl:FunctionalProperty>
  <owl:FunctionalProperty rdf:ID="serialID">
    <rdfs:domain rdf:resource="#Item"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#int"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#DatatypeProperty"/>
  </owl:FunctionalProperty>
</rdf:RDF>

<!-- Created with Protege (with OWL Plugin 2.1, Build 284)  http://protege.stanford.edu -->
